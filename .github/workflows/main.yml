# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - buggy-app

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: | 
          pip install -r requirements.txt
          pip install requests #required to use upload results script

  test:
      runs-on: ubuntu-latest
      needs: build
      
      steps:
        - uses: actions/checkout@v2
        
        - name: Perform SAST Bandit scan.
          run: docker run --rm -v $(pwd):/src hysnsec/bandit -r /src -f json -o /src/bandit-output.json
          continue-on-error: true

        - name: Upload SAST Bandit artifact
          uses: actions/upload-artifact@v2
          with:
            name: Bandit
            path: bandit-output.json
          if: always()
          
        - name: Upload SAST scan results to Defect Dojo
          run: |
            python3 upload-results.py --host ${{ secrets.DOJO_HOST }} --api_key ${{ secrets.DOJO_API_TOKEN }} --engagement_id 1 --product_id 1 --lead_id 1 --environment "Production" --result_file bandit-output.json --scanner "Bandit Scan"

        - name: Upload artifact for deployment jobs
          uses: actions/upload-artifact@v2
          with:
            name: python-app
            path: |
              . 
              !venv/
          
        #- uses: snyk/actions/setup@master
        #- uses: actions/setup-go@v1
        #  with:
        #    go-version: "1.13"

        #- uses: actions/setup-node@v2
        #  with:
        #    node-version: '10.x'

        #- name: Install Node modules
        #  run: 
        #    npm install snyk -g

        - name: Perform SCA Snyk scan.
          uses: snyk/actions/python@master
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
            json: true 
          continue-on-error: true

        - name: Upload SCA Snyk arfifact.
          uses: actions/upload-artifact@v2
          with:
            name: Snyk
            path: snyk.json
          if: always()
              
  deploy:
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
          
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'buggy-app'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_F5311CEC26224FC0B355B9AEED4D08BD }}

      - name: Perform smoke DAST ZAP scan
        run: |
           docker pull owasp/zap2docker-stable:2.10.0
           docker run --user root --rm -v $(pwd):/zap/wrk:rw -w /zap owasp/zap2docker-stable:2.10.0 zap-baseline.py -t ${{ secrets.PROD_URL }} -x zap-output.xml
        continue-on-error: true
      
      - name: Upload DAST ZAP artifact.     
        uses: actions/upload-artifact@v2
        with:
          name: ZAP Scan
          path: zap-output.xml
        if: always()
